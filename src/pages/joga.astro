---
import RichTextRenderer from '@caisy/rich-text-astro-renderer';
import { gql, GraphQLClient } from 'graphql-request';
import Layout from "../layouts/Layout.astro";
import Hero from '../components/Hero.astro'
import YogaTile from '../components/tiles/YogaTile.astro';
import { Image } from 'astro:assets';
import joga01 from '../assets/joga-01.png';
import joga02 from '../assets/joga-02.png';
import joga03 from '../assets/joga-03.png';

const client = new GraphQLClient(
	`https://cloud.caisy.io/api/v3/e/${import.meta.env.CAISY_PROJECT_ID}/graphql`,
	{
		headers: {
			'x-caisy-apikey': import.meta.env.CAISY_API_KEY
		}
	}
);
const gqlResponse = await client.request(
	gql`
		query yoga {
			allYogaReference {
    			edges {
      				node {
        				name
        				text {
          					json
        				}
      				}
    			}
  			}
			Yoga(id: "512bfbae-e37a-4eea-99dd-47b3a886658b") {
				subTitle {
					json
				}
				description {
					json
				}
				howAndWhoTitle
				howAndWhoText {
					json
				}
				yogaAndMeTitle
				yogaAndMeText {
					json
				}
				referenceTitle
			}
		}
	`,
);

const {subTitle, description, howAndWhoTitle, howAndWhoText, yogaAndMeTitle, yogaAndMeText, referenceTitle} = gqlResponse?.Yoga
const {edges} = gqlResponse?.allYogaReference

---
<Layout title='Simply bee - Jóga'>
	<Hero background='bg-yoga.jpg' color="yoga-opacity" subTitle={subTitle} Tile={YogaTile} title='Jóga a meditace' type="yoga" />
	<section class="section">
		<div class="sectionContainer">
			<Image class="sectionImage" src={joga01} alt="Obrazek jogy 01" />
			<div class="sectionContent">
				<p class="sectionText"><RichTextRenderer node={description.json} /></p>
			</div>
		</div>
	</section>
	<section class="section section--odd section--yoga">
		<div class="sectionContainer">
			<div class="sectionContent">
				<h2 class="sectionTitle">{howAndWhoTitle}</h2>
				<p class="sectionText"><RichTextRenderer node={howAndWhoText.json} /></p>
			</div>
			<Image class="sectionImage" src={joga02} alt="Obrazek jogy 02" />
		</div>
	</section>
	<section class="section">
		<div class="sectionContainer">
			<Image class="sectionImage" src={joga03} alt="Obrazek jogy 03" />
			<div class="sectionContent">
				<h2 class="sectionTitle">{yogaAndMeTitle}</h2>
				<p class="sectionText"><RichTextRenderer node={yogaAndMeText.json} /></p>
			</div>
		</div>
	</section>
	<section class="section section--odd section--yoga">
		<div class="sectionContent">
			<h2 class="sectionTitle">Reference</h2>
			<div class="swiper">
				<div class="swiper-wrapper">
					{edges.map(({node}) => {
						return (<li class="swiper-slide">
							<p><RichTextRenderer node={node.text.json} /></p>
							<p class="referenceName">{node.name}</p>
						</li>)
					})}
				</div>
				<div class="swiper-pagination"></div>
				<div class="swiper-button-prev"></div>
				<div class="swiper-button-next"></div>
			</div>
		</div>
	</section>
</Layout>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script is:inline>new Swiper('.swiper', {
	autoplay: {
		delay: 5000,
		pauseOnMouseEnter: true,
	},
	loop: true,
	pagination: {
		enabled: false,
	},
	navigation: {
		nextEl: '.swiper-button-next',
		prevEl: '.swiper-button-prev',
	},
	centeredSlides: true,
	effect: 'cards',
})</script>
<style>
	:root {
		--swiper-navigation-size: 30px;
		--swiper-navigation-top-offset: 50%;
		--swiper-navigation-sides-offset: -80px;
		--swiper-navigation-color: var(--color-main);
	}
</style>